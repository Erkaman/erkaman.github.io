(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.rainbow = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
function rainbow (reglLib, canvasId) {
  var createRegl = require('../common.js').createRegl
  var runAnimation = require('../common.js').runAnimation

  const regl = createRegl(reglLib, canvasId)

  runAnimation(regl, function () {
    layer1()
  })

  var layer1 = regl({
    frag: `
    precision mediump float;

    varying vec2 vUv;

    uniform float tick;
    void main () {
      vec2 uv = vUv;
      vec3 c;

      float d = (uv.x - 0.5);
      float e = abs(d);
      float s = sign(d);

      // make symmetric.
      uv.x -= 0.5;
      uv.x = abs(uv.x);

      float x = uv.x +  (0.1 + 0.01 * sin(tick*0.08)) * sin((uv.y) * 10.0);
      float a = sin(x * 100.0) + 0.8*cos(x * 400.0);

      float f = 20.0;
      float p = -tick * 0.05;

      float r = sin(f*uv.x + 0.0 + p) * 0.25 + 0.25;
      float g = sin(f*uv.x + 2.0 + p) * 0.25 + 0.25;
      float b = sin(f*uv.x + 4.0 + p) * 0.25 + 0.25;

      c = vec3(r, g, b);

      float f2 = 28.0;
      p = -tick * 0.09;
      r = sin(f2*uv.y + 0.0 - p) * 0.40 + 0.1;
      g = sin(f2*uv.y*uv.x + 2.0 - p) * 0.25 + 0.25;
      b = sin(f2*uv.y + 4.0 - p) * 0.25 + 0.25;
      c += vec3(r,g,b);

      c *= smoothstep(0.0, 2.0, a+1.0);
      gl_FragColor = vec4(c, 1.0);
    }`
  })
}

module.exports = rainbow

},{"../common.js":2}],2:[function(require,module,exports){
module.exports.runAnimation = function (regl, cb) {
/*
  var createReglRecorder = require('regl-recorder')

  const VIDEO_WIDTH = 480
  const VIDEO_HEIGHT = 270

  const regl = require('regl')(require('gl')(VIDEO_WIDTH, VIDEO_HEIGHT, {preserveDrawingBuffer: true, antialias: true}))

  var recorder = createReglRecorder(regl, 500)
*/
  var globalScope = regl({
    attributes: {
      position: [-2, 0, 0, -2, 2, 2]
    },

    uniforms: {
      tick: ({tick}) => tick
    },

    count: 3,

    vert: `
    precision mediump float;
    attribute vec2 position;
    varying vec2 vUv;

    void main () {
      vUv = position;
      gl_Position = vec4(1.0 - 2.0 * position, 0.0, 1);
    }`,

    depth: { enable: false }
  })

  regl.frame(({viewportWidth, viewportHeight}) => {
    regl.clear({ color: [0, 0, 0, 1] })

    globalScope(() => {
      cb()
    })

//    recorder.frame(viewportWidth, viewportHeight)
  })

  return regl
}

module.exports.createRegl = function (reglLib, canvasId) {
  var canvas = document.getElementById(canvasId)
  if (canvas === null) {
    canvas = document.body.appendChild(document.createElement('canvas'))
    canvas.style.width = '480px'
    canvas.style.height = '270px'
  }
  var context = canvas.getContext('webgl', {
    antialias: false
  })

  return reglLib(context)
}

},{}]},{},[1])(1)
});